{
	"info": {
		"_postman_id": "0c3bc3d6-aa28-4f3f-a397-f908f9922a4b",
		"name": "Integrations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Files",
			"item": [
				{
					"name": "Get All Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"should return array of files\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    for (let i = 0; i < jsonData.length; i++) {\r",
									"        pm.expect(jsonData[i]).to.have.all.keys('id', 'fileName', 'createdBy', 'createdAt', 'updatedAt');\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/v1/files",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"should return array of files\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData).to.have.all.keys('id', 'fileName', 'createdBy', 'createdAt', 'updatedAt');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/v1/files/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"files",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"should return array of files\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    for (let i = 0; i < jsonData.length; i++) {\r",
									"        pm.expect(jsonData[i]).to.have.all.keys('id', 'firstName', 'lastName', 'email', 'gender', 'ipAddress');\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/v1/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"should return array of files\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData).to.have.all.keys('id', 'firstName', 'lastName', 'email', 'gender', 'ipAddress');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/v1/users/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}